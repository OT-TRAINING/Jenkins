folder('pipeline/scripted') {
  	displayName('Scripted Pipeline Jobs')
    description('Folder for Scripted Pipeline Jobs')

    pipelineJob('pipeline/scripted/01 Conditional_Pipeline') {
                        definition {
                            cps {
                                script('''
                                    node {
                                        def publisherReport = false
                                        def notification = true

                                        stage('Code Checkout') {
                                            git 'https://github.com/opstree/spring3hibernate.git'
                                        }

                                        stage('Code Build') {
                                            echo "Building Code"
                                        }

                                        if (publisherReport) {
                                            stage('Report Publishing') {
                                                echo "Publishing report.html"
                                                // Add your report publishing logic here
                                            }
                                        }

                                        if (notification) {
                                            stage('Notification') {
                                                echo "Sending Slack notification"
                                                // Add your notification logic here
                                            }
                                        }
                                    }
                                ''')
                            }
                        }
                    }
    pipelineJob('pipeline/scripted/02 Exceptional_Pipeline') {
                        definition {
                            cps {
                                script('''
                                    node {
                                        stage('Code Checkout') {
                                            git 'https://github.com/opstree/spring3hibernate.git' // Replace with your actual Git repository URL
                                        }

                                        stage('Code Build') {
                                            echo "Building code"
                                        }

                                        try {
                                            stage('Report Publishing') {
                                                cobertura autoUpdateHealth: false,
                                                        autoUpdateStability: false,
                                                        coberturaReportFile: '**/target/site/cobertura/coverage.xml',
                                                        conditionalCoverageTargets: '70, 80, 80',
                                                        failUnhealthy: true,
                                                        failUnstable: true,
                                                        lineCoverageTargets: '80, 80, 80',
                                                        maxNumberOfBuilds: 0,
                                                        methodCoverageTargets: '80, 80, 80',
                                                        onlyStable: false,
                                                        sourceEncoding: 'ASCII',
                                                        zoomCoverageChart: false

                                                recordIssues(tools: [pmdParser(), checkStyle(), findbugs(useRankAsPriority: true)])
                                            }
                                        } catch (Exception e) {
                                            echo "Report publishing failed: ${e.message}"
                                        }

                                        stage('Notification') {
                                            echo "Sending Slack notification"
                                            // Add your Slack notification logic here
                                        }
                                    }
                                ''')
                            }
                        }
                    }
}